<div class="title-wrapper">
	<div class="container">
		<div class="container-inner">
			{{#if currentCategory}}
			<h1><span>{{currentCategory}}</span> CATEGORY</h1>
			{{else}}
			<h1><span> SEARCH: </span> {{searchName}}</h1>
			{{/if}}
		</div>
	</div>
</div>


<div class="main">
	<div class="container">
		{{> productBreadcrumb}}
		<!-- BEGIN SIDEBAR & CONTENT -->
		<div class="row margin-bottom-40">
			<!-- BEGIN SIDEBAR -->
			<div class="sidebar col-md-3 col-sm-5">
				{{> categorySidebar}}
				{{> filterSidebar}}
				{{> popularProductSidebar}}
			</div>
			<!-- END SIDEBAR -->

			<!-- BEGIN CONTENT -->
			<div class="col-md-9 col-sm-7">
				<!-- BEGIN SORTER -->
				<div class="row list-view-sorting clearfix">
					<div class="col-md-2 col-sm-2 list-view">
						<a href="javascript:;"><i class="fa fa-th-large"></i></a>
						<a href="javascript:;"><i class="fa fa-th-list"></i></a>
					</div>
					<div class="col-md-10 col-sm-10">
						<div class="pull-right">
							<label class="control-label">Sort&nbsp;By:</label>
							<select class="form-control input-sm" name="sort-by" id="sort-by">
								<option value="0">Default</option>
								<option value="1"> New arrivals</option>
								<option value="2"> Price (Low &gt; High)</option>
								<option value="3"> Price (High &gt; Low)</option>
							</select>
						</div>
					</div>
				</div>
				<!-- END SORTER -->

				<!-- BEGIN PRODUCT LIST -->
				<div id="product-view" class="row">
					<h3>Loading...</h3>
				</div>

				<!-- END PRODUCT LIST -->
				<!-- BEGIN PAGINATOR -->
				<div class="row">
					<div class="col-md-12 col-sm-12 justify-content-end">
						<ul class="pagination pull-right" id="paginator">
						</ul>
					</div>
				</div>
				<!-- END PAGINATOR -->
			</div>
			<!-- END CONTENT -->
		</div>
		<!-- END SIDEBAR & CONTENT -->
	</div>
</div>

{{#section "scripts"}}
<script>
	let productTemplate;
	let currentPage = 1;
	let totalPages = 1;

	const urlParams = new URLSearchParams(window.location.search);

	const currentCategory = urlParams.get('cate')
	const currentType = urlParams.get('type')
	const term = urlParams.get('term')
	const filter = urlParams.get('filter');
	const sort = urlParams.get('sort');

	function redirectPage(currentCategory, currentType, term, filter, sort) {
		let existingParams = `?`;
		if (term) {
			existingParams = `search/?`;
			existingParams += `&term=${term}`;
		}
		if(currentCategory) {
			existingParams += `cate=${currentCategory}`;
		}
		if(currentType) {
			existingParams += `&type=${currentType}`;
		}
		if(filter) {
			existingParams += `&filter=${filter}`;
		}
		if(sort) {
			existingParams += `&sort=${sort}`;
		}
		window.location.href = '/product/' + existingParams;
	}
	
	async function getProducts(apiURL) {
		apiURL = apiURL.replace('/search', '');
		const result = await fetch(apiURL, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(res => res.json());
		return result;
	}
	
	async function renderProducts(products) {
		const productItemHtml = await fetch('./assets/productItem.html')
		const productTemplateSrc = await productItemHtml.text();
		productTemplate = Handlebars.compile(productTemplateSrc);
		const productContainer = document.getElementById('product-view');

		productContainer.innerHTML = productTemplate(products);
		generatePagination();
		window.scrollTo({
			top: 200,
			behavior: 'smooth'
		});
	}

	async function initialLoad() {
		///product/?cate=woman
		const apiURL = '/product/' + window.location.search;
		const products = await getProducts(apiURL);
		totalPages = Math.ceil(products.productCount / 9);
		renderProducts(products);
	}

	function generatePagination() {
		let paginator = document.getElementById('paginator');
		paginator.innerHTML = '';
		let existingParams = `?`;
		if (term) {
			existingParams = `search/?`;
			existingParams += `&term=${term}`;
		}
		if(currentCategory) {
			existingParams += `cate=${currentCategory}`;
		}
		if(currentType) {
			existingParams += `&type=${currentType}`;
		}
		if(sort) {
			existingParams += `&sort=${sort}`;
		}
		if(filter) {
			existingParams += `&filter=${filter}`;
		}

		if (totalPages > 1) {
			// Left arrow
			if(currentPage > 1) {
				let li = document.createElement('li');
				let a = document.createElement('a');
				a.href = 'javascript:void(0);';
				a.innerText = 'Previous';
				a.addEventListener('click', () => {
					getProducts(`/product/${existingParams}&page=${currentPage - 1}`).then(products => {
						renderProducts(products);
						currentPage = currentPage - 1;
					});
				});
				li.appendChild(a);
				paginator.appendChild(li);
			}

			// Number
			for (let i = 1; i <= totalPages; i++) {
				let li = document.createElement('li');
				if (i !== currentPage) {
					let a = document.createElement('a');
						a.href = 'javascript:void(0);';
						a.innerText = i;
						a.addEventListener('click', () => {
							getProducts(`/product/${existingParams}&page=${i}`).then(products => {
								renderProducts(products);
								currentPage = i;
							});
						});
					li.appendChild(a);
				}else {
					let span = document.createElement('span');
					span.innerText = i;
					li.appendChild(span);
				}
				paginator.appendChild(li);
			}

			// Right arrow
			if(currentPage < totalPages) {
				let li = document.createElement('li');
				let a = document.createElement('a');
				a.href = 'javascript:void(0);';
				a.innerText = 'Next';
				a.addEventListener('click', () => {
					getProducts(`/product/${existingParams}&page=${currentPage + 1}`).then(products => {
						renderProducts(products);
						currentPage = currentPage + 1;
					});
				});
				li.appendChild(a);
				paginator.appendChild(li);
			}
		}
	}

	document.addEventListener('DOMContentLoaded', function () {
		const sortSelect = document.querySelector('#sort-by');
		sortSelect.value = sort || 0;
		sortSelect.addEventListener('change', () => {
			redirectPage(currentCategory, currentType, term, filter, sortSelect.value);
		});
		
		
		const selectedFilter = document.querySelector(`input[name="price-range"][value="${filter}"]`);
		if (selectedFilter) {
			selectedFilter.click();
		}
		const radioList = document.querySelectorAll('input[name="price-range"]');

		radioList.forEach((radio, selectedValue) => {
			radio.addEventListener('click', () => {
				redirectPage(currentCategory, currentType, term, selectedValue, sort);
			});
		})
		
		initialLoad();
	});
</script>
{{/section}}