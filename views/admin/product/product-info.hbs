{{> spinner}}
<div class="container-fluid pt-4 px-4">
    <div class="bg-light rounded h-100 p-4">
        <h6 class="mb-4">PRODUCT DETAIL</h6>
        <form id="product-info" class="" action="">
            <div class="row">
                    <div class="col-md-4">
                        <div id="thumbnail">
                            
                        </div>
                        <div id="update-thumbnail" class="hide">
                            <div class="product-main-image">
                                <label for="formFileMultiple" class="form-label">Thumbnail</label>
                                <input required class="form-control" type="file" id="formFileMultiple" name="files" multiple>
                            </div>
                            <div id="delete-thumbnail">

                            </div>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="row mb-0">
                            <label class="col-md-4 text-gray" for="product-name">Product name</label>
                            <div class="col-8">
                                <input required id="product-name" type="text" class="form-control mb-4" disabled value="{{productDetail.name}}"/>
                            </div>
                        </div>
                        <div class="row mb-0">
                            <label class="col-md-4 text-gray">Price</label>
                            <div class="col-8">
                                <input required id="product-price" type="number" class="form-control mb-4" disabled value="{{productDetail.price}}"/>
                            </div>
                        </div>
                        <div class="row mb-0">
                            <label class="col-md-4 text-gray">Discount</label>
                            <div class="col-8">
                                <input required id="product-discount" type="number" class="form-control mb-4" disabled value="{{productDetail.discount}}"/>
                            </div>
                        </div>
                        <div class="row mb-0">
                            <label class="col-md-4 text-gray">Size</label>
                            <div class="col-8 mb-4">
                                <input value="L" name="size" type="checkbox" class="form-check-input me-2" {{#if (contains productDetail.size "L")}}checked{{/if}} disabled>
                                <label class="form-check-label me-4">L</label>
                                <input value="M" name="size" type="checkbox" class="form-check-input me-2" {{#if (contains productDetail.size "M")}}checked{{/if}} disabled>
                                <label class="form-check-label me-4">M</label>
                                <input value="S" name="size" type="checkbox" class="form-check-input me-2" {{#if (contains productDetail.size "S")}}checked{{/if}} disabled>
                                <label class="form-check-label me-4">S</label>
                            </div>
                        </div>
                        <div class="row mb-0">
                            <label class="col-md-4 text-gray">Availability</label>
                            <div class="col-8">
                                <input required id="product-availability" type="number" class="form-control mb-4" disabled  value="{{productDetail.availability}}"/>
                            </div>
                        </div>
                        <div class="row mb-0">
                            <label class="col-md-4 text-gray">Quantity sold</label>
                            <div class="col-8">
                                <input required id="product-sold" type="number" class="form-control mb-4" disabled value="{{productDetail.sold}}"/>
                            </div>
                        </div>
                        <div class="row mb-0">
                            <label class="col-md-4 text-gray">Category</label>
                            <div class="col-8">
                                <input required id="product-cate" type="text" class="form-control mb-4" disabled value="{{productDetail.category}}"/>
                                <select required class="form-select form-control mb-4 hide"
                                    aria-label="Floating label select example" name="category" id="category">
                                    <option value="0">Choose category</option>
                                    <option value="woman">Woman</option>
                                    <option value="man">Man</option>
                                    <option value="kids">Kid</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-0">
                            <label class="col-md-4 text-gray">Subcategory</label>
                            <div class="col-8">
                                <input required id="product-type" type="text" class="form-control mb-4" disabled value="{{productDetail.subcategory}}"/>
                                <select required class="form-select form-control mb-4 hide" aria-label="Floating label select example" name="subcategory" id="subcategory">
                                    <option value="">Choose subcategory</option>
                                </select>
                                <div id="subcategory-list"></div>
                            </div>
                        </div>
                        <div class="row mb-0">
                            <label class="col-md-4 text-gray">Rate</label>
                            <div class="col-8">
                                <h6 required class="mb-4" id="product-rating" type="number">{{productDetail.rating}}</h6>
                            </div>
                        </div>
                        <div class="row mb-0">
                            <label class="col-md-4 text-gray">Description</label>
                            <div class="col-8">
                                <textarea required class="form-control mb-4" value="{{productDetail.description}}"
                                    id="description" name="description" style="height: 150px;" disabled>{{productDetail.description}}</textarea>
                            </div>
                        </div>
                        <div class="row mb-0">
                            <label class="col-md-4 text-gray">Information</label>
                            <div class="col-8">
                                <textarea required class="form-control" value="{{productDetail.information}}"
                                    id="information" name="information" style="height: 150px;" disabled>{{productDetail.information}}</textarea>
                            </div>
                        </div>
                        <div class="row justify-content-end">
                            <button class="btn btn-sm btn-detail col-3" id="update">Update</button>
                            <button class="btn btn-sm btn-primary col-3" id="delete-product">Delete this product</button>
                            <button class="btn btn-sm btn-primary col-3 hide" id="save">Save</button>
                            <button class="btn btn-sm btn-detail col-3 hide" id="cancel">Cancel</button>
                        </div>
                    </div>
                </div>
        </form>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    const categorySelect = document.querySelector('#category');
    const subcategorySelect = document.querySelector('#subcategory');
    const subcategoryListContainer = document.querySelector('#subcategory-list');
    let deleteImage = [];
    categorySelect.addEventListener('change', function () {
        const selectedCategory = categorySelect.value;

        // Kiểm tra nếu là "Choose category" thì xóa danh sách subcategory
        if (selectedCategory === "") {
            subcategorySelect.innerHTML = '<option value="">Choose subcategory</option>';
            subcategoryListContainer.innerHTML = '';
            return;
        }

        // Gửi yêu cầu AJAX để lấy danh sách subcategory từ server
        fetch(`/products/create/api/subcategories/${selectedCategory}`)
            .then(response => response.json())
            .then(data => {
                const subcategories = data.subcategories;
                console.log('Data from API:', data);

                // Xóa tất cả các option hiện tại trong select subcategory
                subcategorySelect.innerHTML = '<option value="">Choose subcategory</option>';

                // Thêm các option mới vào select subcategory
                subcategories.forEach(subcategory => {
                    const option = document.createElement('option');
                    option.value = subcategory;
                    option.textContent = subcategory;
                    subcategorySelect.appendChild(option);
                });

                // Hiển thị danh sách subcategory
                //subcategoryListContainer.innerHTML = subcategories.map(subcategory => subcategory.name).join(', ');
            })
            .catch(error => console.error('Error:', error));
    });
    async function renderThumbnail(id) {
        const product = await fetch(`/products/${id}`, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(res => res.json());
        console.log(product);

		const thumbnailHtml = await fetch('./assets/thumbnail.html');
		const thumbnailTemplateSrc = await thumbnailHtml.text();
        thumbnailTemplate = Handlebars.compile(thumbnailTemplateSrc);
		const thumbnailContainer = document.getElementById('thumbnail');

        thumbnailContainer.innerHTML = thumbnailTemplate(product);

        $('.other-image-link').on('click', function (e) {
            e.preventDefault(); // Prevent default link behavior
            // Get the clicked image source
            var newImageSrc = $(this).find('img').attr('src');

            // Set the main image source
            $('.product-main-image img').attr('src', newImageSrc);
        });
    }
    async function renderUpdateThumbnail(id) {
        const product = await fetch(`/products/${id}`, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(res => res.json());

		const thumbnailHtml = await fetch('./assets/updateThumbnail.html');
		const thumbnailTemplateSrc = await thumbnailHtml.text();
        thumbnailTemplate = Handlebars.compile(thumbnailTemplateSrc);
		const thumbnailContainer = document.getElementById('delete-thumbnail');

        thumbnailContainer.innerHTML = thumbnailTemplate(product);
        thumbnailContainer.querySelectorAll("button").forEach((button) => {
            button.addEventListener('click', () => {
                button.closest('#delete-image').classList.add("hide");
                deleteImage.push(button.id);
            })
        });
    }
    document.addEventListener("DOMContentLoaded", () => {
        const pathName = window.location.pathname;
        const productIndex = pathName.indexOf("/products/");
        const id = pathName.slice(productIndex + "/products/".length);
        const selectedCategoryFrist = "{{productDetail.category}}";
        fetch(`/products/create/api/subcategories/${selectedCategoryFrist}`)
            .then(response => response.json())
            .then(data => {
                const subcategories = data.subcategories;
                console.log('Data from API:', data);

                // Xóa tất cả các option hiện tại trong select subcategory
                subcategorySelect.innerHTML = '<option value="">Choose subcategory</option>';

                // Thêm các option mới vào select subcategory
                subcategories.forEach(subcategory => {
                    const option = document.createElement('option');
                    option.value = subcategory;
                    option.textContent = subcategory;
                    subcategorySelect.appendChild(option);
                });

                // Hiển thị danh sách subcategory
                //subcategoryListContainer.innerHTML = subcategories.map(subcategory => subcategory.name).join(', ');
            })
            .catch(error => console.error('Error:', error));
        document.querySelector('#product-info').addEventListener("submit", (e) => {
            e.preventDefault();
        });
        document.querySelector('#update').addEventListener("click", () => {
            deleteImage.length = 0;
            document.querySelectorAll("input").forEach((input) => {
				input.removeAttribute("disabled");
			});
            document.querySelectorAll("textarea").forEach((text) => {
				text.removeAttribute("disabled");
			});
            document.querySelector("#product-cate").classList.add("hide");
            document.querySelector("#category").classList.remove("hide");
            document.querySelector("#product-type").classList.add("hide");
            document.querySelector("#subcategory").classList.remove("hide");
            document.querySelector('#thumbnail').classList.add("hide");
            document.querySelector('#update-thumbnail').classList.remove("hide");
            document.querySelector("#category").value = "{{productDetail.category}}";
            document.querySelector("#subcategory").value = "{{productDetail.subcategory}}";

            

            document.querySelector("#update").classList.add("hide");
            document.querySelector("#delete-product").classList.add("hide");
            document.querySelector("#save").classList.remove("hide");
            document.querySelector("#cancel").classList.remove("hide");
        });

        

        document.querySelector('#cancel').addEventListener("click", () => {
            deleteImage.length = 0;
            document.querySelectorAll('input').forEach((input) => {
                input.setAttribute("disabled", "");
				input.value = input.getAttribute("value");
            });
            document.querySelectorAll("textarea").forEach((text) => {
			    text.setAttribute("disabled", "");
				text.value = text.getAttribute("value");
			});
            document.querySelector("#product-cate").classList.remove("hide");
            document.querySelector("#category").classList.add("hide");
            document.querySelector("#product-type").classList.remove("hide");
            document.querySelector("#subcategory").classList.add("hide");
            document.querySelector('#thumbnail').classList.remove("hide");
            document.querySelector('#update-thumbnail').classList.add("hide");

            document.querySelector("#update").classList.remove("hide");
            document.querySelector("#delete-product").classList.remove("hide");
            document.querySelector("#save").classList.add("hide");
            document.querySelector("#cancel").classList.add("hide");
            renderUpdateThumbnail(id);
        });

        

        document.querySelector("#save").addEventListener("click", async () => {
            document.querySelectorAll("input").forEach((input) => {
				input.setAttribute("disabled", "");
			});
            document.querySelectorAll("textarea").forEach((text) => {
			    text.setAttribute("disabled", "");
			});
            const selectedSizes = [];
            document.querySelectorAll('input[name="size"]').forEach((sizeCheckbox) => {
                if (sizeCheckbox.checked) {
                    selectedSizes.push(sizeCheckbox.value);
                }
            });

            const result = await fetch(`/products/update/${id}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    product_name: document.querySelector("#product-name").value,
                    product_price: document.querySelector("#product-price").value,
                    product_discount: document.querySelector("#product-discount").value,
                    product_size: selectedSizes,
                    product_availability: document.querySelector("#product-availability").value,
                    product_sold: document.querySelector("#product-sold").value,
                    product_cate: document.querySelector('#category').value,
                    product_type: document.querySelector('#subcategory').value,
                    product_description: document.querySelector("#description").value,
                    product_information: document.querySelector("#information").value,
                }),
            });

            if (deleteImage.length != 0) {
                await fetch(`/products/delete-thumbnail/${id}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        product_thumbnail_delete: deleteImage,
                    }),
                });
            }

            const fileInput = document.querySelector('#formFileMultiple');
            if (fileInput.files.length > 0) {
                const formData = new FormData();
                const files = fileInput.files;
                for (let i = 0; i < files.length; i++) {
                    formData.append('image', files[i]);
                    console.log(files[i]);
                }

                await fetch(`/products/add-thumbnail/${id}`, {
                    method: "POST",
                    body: formData,
                });
            }
            
            document.querySelector("#product-cate").classList.remove("hide");
            document.querySelector("#category").classList.add("hide");
            document.querySelector("#product-type").classList.remove("hide");
            document.querySelector("#subcategory").classList.add("hide");

            document.querySelector("#update").classList.remove("hide");
            document.querySelector("#delete-product").classList.remove("hide");
            document.querySelector("#save").classList.add("hide");
            document.querySelector("#cancel").classList.add("hide");

            renderThumbnail(id);
            renderUpdateThumbnail(id);
            document.querySelector('#thumbnail').classList.remove("hide");
            document.querySelector('#update-thumbnail').classList.add("hide");
        });

        
        renderThumbnail(id);
        console.log("here");

        renderUpdateThumbnail(id);
        document.querySelector("#delete-product").addEventListener("click", async () => {
            if (confirm("Are you sure you want to delete this product?")) {
                await fetch(`/products/dashboard/api/delete/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Product deleted successfully:', data);
                    window.location.href = `/products/dashboard/`;
                })
                .catch(error => {
                    console.error('Error deleting product:', error);
                });
            }
        });
    });
</script>